"""Add time in assigning a drug

Revision ID: 68a5ed73ab1d
Revises: 5ca61f23947e
Create Date: 2018-02-23 16:51:43.900000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '68a5ed73ab1d'
down_revision = '5ca61f23947e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('drug',
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('side_effects', sa.String(length=256), nullable=True),
    sa.Column('restricted', sa.Integer(), nullable=True),
    sa.Column('barcode', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('drug_id')
    )
    op.create_index(op.f('ix_drug_restricted'), 'drug', ['restricted'], unique=False)
    op.create_table('nurse',
    sa.Column('nurse_id', sa.String(length=32), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('nurse_id')
    )
    op.create_index(op.f('ix_nurse_email'), 'nurse', ['email'], unique=True)
    op.create_table('patient',
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('qr_code', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('patient_id')
    )
    op.create_index(op.f('ix_patient_age'), 'patient', ['age'], unique=False)
    op.create_index(op.f('ix_patient_name'), 'patient', ['name'], unique=False)
    op.create_index(op.f('ix_patient_qr_code'), 'patient', ['qr_code'], unique=False)
    op.create_table('drug_patient',
    sa.Column('drug_id', sa.Integer(), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['drug_id'], ['drug.drug_id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.patient_id'], )
    )
    op.create_table('package',
    sa.Column('package_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.patient_id'], ),
    sa.PrimaryKeyConstraint('package_id')
    )
    op.create_table('patient_drug',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('drug_id', sa.Integer(), nullable=True),
    sa.Column('qty', sa.Integer(), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['drug_id'], ['drug.drug_id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.patient_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patient_drug_qty'), 'patient_drug', ['qty'], unique=False)
    op.create_index(op.f('ix_patient_drug_time'), 'patient_drug', ['time'], unique=False)
    op.create_table('drug_identifier',
    sa.Column('drug_id', sa.Integer(), nullable=True),
    sa.Column('package_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['drug_id'], ['drug.drug_id'], ),
    sa.ForeignKeyConstraint(['package_id'], ['package.package_id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('drug_identifier')
    op.drop_index(op.f('ix_patient_drug_time'), table_name='patient_drug')
    op.drop_index(op.f('ix_patient_drug_qty'), table_name='patient_drug')
    op.drop_table('patient_drug')
    op.drop_table('package')
    op.drop_table('drug_patient')
    op.drop_index(op.f('ix_patient_qr_code'), table_name='patient')
    op.drop_index(op.f('ix_patient_name'), table_name='patient')
    op.drop_index(op.f('ix_patient_age'), table_name='patient')
    op.drop_table('patient')
    op.drop_index(op.f('ix_nurse_email'), table_name='nurse')
    op.drop_table('nurse')
    op.drop_index(op.f('ix_drug_restricted'), table_name='drug')
    op.drop_table('drug')
    # ### end Alembic commands ###
